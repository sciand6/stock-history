{"version":3,"sources":["ClosingPrices/ClosingPriceList.js","App.js","index.js"],"names":["ClosingPriceList","symbols","stocks","map","stockArray","index","className","stock","date","substring","indexOf","close","high","low","App","useState","setsymbols","currentsymbols","setcurrentsymbols","Date","getTime","period1","setperiod1","period2","setperiod2","setstocks","error","seterror","htmlFor","onChange","e","target","value","type","id","onClick","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","status","json","data","getHistoricalData","split","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAwCeA,MArCf,YAAgD,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OACnC,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAYC,GACvB,OACE,sBAAKC,UAAU,MAAf,UACE,6BAAKL,EAAQI,KACZD,EAAWD,KAAI,SAACI,GACf,OACE,qBAAKD,UAAU,UAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACGC,EAAMC,KAAKC,UAAU,EAAGF,EAAMC,KAAKE,QAAQ,QAE9C,sBAAKJ,UAAU,SAAf,UACE,wBAAQA,UAAU,SAAlB,mBACA,sBAAMA,UAAU,SAAhB,SAA0BC,EAAMI,WAElC,sBAAKL,UAAU,SAAf,UACE,wBAAQA,UAAU,SAAlB,kBACA,sBAAMA,UAAU,SAAhB,SAA0BC,EAAMK,UAElC,sBAAKN,UAAU,SAAf,UACE,wBAAQA,UAAU,SAAlB,iBACA,sBAAMA,UAAU,SAAhB,SAA0BC,EAAMM,WAdNN,EAAMC,oB,MC2EvCM,MApFf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOd,EAAP,KAAgBe,EAAhB,KACA,EAA4CD,mBAAS,IAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KACA,EAA8BH,mBAC5B,IAAII,MAAK,IAAIA,MAAOC,UAAY,SADlC,mBAAOC,EAAP,KAAgBC,EAAhB,KAGA,EAA8BP,mBAAS,IAAII,MAA3C,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA4BT,mBAAS,IAArC,mBAAOb,EAAP,KAAeuB,EAAf,KACA,EAA0BV,mBAAS,IAAnC,mBAAOW,EAAP,KAAcC,EAAd,KAiCA,OACE,sBAAKrB,UAAU,MAAf,UACE,uDACCoB,EAAQ,qBAAKpB,UAAU,QAAf,SAAwBoB,IAAe,GAEhD,uBAAOE,QAAQ,SAAf,qBACA,uBACEtB,UAAU,YACVuB,SAAU,SAACC,GAAD,OAAOd,EAAWc,EAAEC,OAAOC,QACrCC,KAAK,OACLC,GAAG,WAEL,iFACA,sBAAK5B,UAAU,QAAf,UACE,uBAAOsB,QAAQ,UAAf,kBACA,uBACA,uBACEtB,UAAU,YACVuB,SAAU,SAACC,GAAD,OAAOR,EAAWQ,EAAEC,OAAOC,QACrCC,KAAK,OACLC,GAAG,YAEL,uBACA,uBAAON,QAAQ,UAAf,gBACA,uBACA,uBACEtB,UAAU,YACVuB,SAAU,SAACC,GAAD,OAAON,EAAWM,EAAEC,OAAOC,QACrCC,KAAK,OACLC,GAAG,eAGP,uBACEC,QAAS,kBAhEf,WACE,GAAKlC,EAIL,GAAI,IAAIkB,KAAKE,GAASD,UAAY,IAAID,KAAKI,GAASH,UAClDO,EAAS,+CADX,CAIA,IAAMS,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBxC,UACAoB,UACAE,aAGJmB,MAAM,cAAeN,GAAgBO,MAAK,SAACC,GACtB,MAAfA,EAAIC,OACND,EAAIE,OAAOH,MAAK,SAACI,GACftB,EAAUsB,EAAK7C,QACfgB,EAAkBjB,GAClB0B,EAAS,OAGXA,EAAS,oDAxBXA,EAAS,6CA8DQqB,IACff,KAAK,SACLD,MAAM,SACN1B,UAAU,WAEZ,cAAC,EAAD,CAAkBL,QAASgB,EAAegC,MAAM,KAAM/C,OAAQA,QC9EpEgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.29a67650.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ClosingPriceList.css\";\n\nfunction ClosingPriceList({ symbols, stocks }) {\n  return (\n    <div>\n      {stocks.map((stockArray, index) => {\n        return (\n          <div className=\"Row\">\n            <h2>{symbols[index]}</h2>\n            {stockArray.map((stock) => {\n              return (\n                <div className=\"RowItem\">\n                  <div className=\"Closing\" key={stock.date}>\n                    <div className=\"Column\">\n                      {stock.date.substring(0, stock.date.indexOf(\"T\"))}\n                    </div>\n                    <div className=\"Column\">\n                      <strong className=\"Column\">Close</strong>\n                      <span className=\"Column\">{stock.close}</span>\n                    </div>\n                    <div className=\"Column\">\n                      <strong className=\"Column\">High</strong>\n                      <span className=\"Column\">{stock.high}</span>\n                    </div>\n                    <div className=\"Column\">\n                      <strong className=\"Column\">Low</strong>\n                      <span className=\"Column\">{stock.low}</span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ClosingPriceList;\n","import { useState } from \"react\";\nimport ClosingPriceList from \"./ClosingPrices/ClosingPriceList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [symbols, setsymbols] = useState(\"\");\n  const [currentsymbols, setcurrentsymbols] = useState(\"\");\n  const [period1, setperiod1] = useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const [period2, setperiod2] = useState(new Date());\n  const [stocks, setstocks] = useState([]);\n  const [error, seterror] = useState(\"\");\n\n  function getHistoricalData() {\n    if (!symbols) {\n      seterror(\"ERROR: Please enter the ticker symbol(s).\");\n      return;\n    }\n    if (new Date(period1).getTime() > new Date(period2).getTime()) {\n      seterror(\"ERROR: Please enter a valid time range.\");\n      return;\n    }\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        symbols,\n        period1,\n        period2,\n      }),\n    };\n    fetch(`/historical`, requestOptions).then((res) => {\n      if (res.status !== 400) {\n        res.json().then((data) => {\n          setstocks(data.stocks);\n          setcurrentsymbols(symbols);\n          seterror(\"\");\n        });\n      } else {\n        seterror(\"ERROR: Please enter a valid ticker list.\");\n      }\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Historical Stock Data</h1>\n      {error ? <div className=\"Error\">{error}</div> : \"\"}\n\n      <label htmlFor=\"ticker\">Tickers</label>\n      <input\n        className=\"TextInput\"\n        onChange={(e) => setsymbols(e.target.value)}\n        type=\"text\"\n        id=\"ticker\"\n      ></input>\n      <p>Examples of valid input: AAPL or AAPL,GOOGL,AMZN</p>\n      <div className=\"Dates\">\n        <label htmlFor=\"period1\">From</label>\n        <br />\n        <input\n          className=\"DateInput\"\n          onChange={(e) => setperiod1(e.target.value)}\n          type=\"date\"\n          id=\"period1\"\n        ></input>\n        <br />\n        <label htmlFor=\"period2\">To</label>\n        <br />\n        <input\n          className=\"DateInput\"\n          onChange={(e) => setperiod2(e.target.value)}\n          type=\"date\"\n          id=\"period2\"\n        ></input>\n      </div>\n      <input\n        onClick={() => getHistoricalData()}\n        type=\"button\"\n        value=\"SUBMIT\"\n        className=\"Submit\"\n      ></input>\n      <ClosingPriceList symbols={currentsymbols.split(\",\")} stocks={stocks} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}